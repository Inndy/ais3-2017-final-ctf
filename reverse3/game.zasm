.sect text
jmp $start
.include zstdlib/stdlib.zasm
start:
.include zstdlib/anti-sidechannel.zasm



pusi $str
call $puts
pop  ra

movi r1, 0
movi r2, 0x1000

decrypt_loop:
ld ra, r1, $encrypted_shellcode
ld r3, r1, $encrypted_shellcode+2
xorr r3, ra, r3
not ra, r3
xori r3, ra, 0x2255
xorr ra, r3, r1
st ra, r1, $encrypted_shellcode+2
addi r1, r1, 2
jgi r2, r1, $decrypt_loop ; while(r2 > r1)

jmp $dontdump
pusi 0x100
pusi $encrypted_shellcode
call $write
dontdump:
jmp $encrypted_shellcode




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    data
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

.sect data
.align 16

.include zstdlib/stdlib_data.zasm

str:
.str 'Do you like VM?'

.str 'Hope you like this challenge, rewrite from https://github.com/Inndy/zzvm but renumbered the opcodes'

.sect encrypted 0xa000
encrypted_shellcode:
.include encrypted.zasm
